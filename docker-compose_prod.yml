services:
  mongoDB-sentiment_analysis:
    container_name: mongoDB-sentiment_analysis-container
    image: mongo:latest
    restart: always
    hostname: ${MONGO_DB_HOST_NAME}
    env_file:
      - ".env"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USER_NAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    command: mongod --port ${MONGO_CUSTOM_DB_PORT}
    ports:
      - $MONGO_CUSTOM_DB_PORT:$MONGO_CUSTOM_DB_PORT
    volumes: 
      - mongo-db-data-sentiment_analysis:/data/db
      - mongodb-log-sentiment_analysis:/var/log/mongodb/
    deploy:
      resources:
          limits:
            cpus: "2.0"
            memory: 500M
    networks:
      - sentiment_analysis_network
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh --host $MONGO_DB_HOST_NAME --port $MONGO_CUSTOM_DB_PORT admin -u $MONGO_DB_USER_NAME -p $MONGO_DB_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s

  mongoDB-express-sentiment_analysis:
    container_name: mongoDB-express-sentiment_analysis
    image: mongo-express:latest
    restart: always
    ports:
      - $MONGO_DB_EXPRESS_CUSTOM_PORT:$MONGO_DB_EXPRESS_PORT
    environment:
      ME_CONFIG_SITE_BASEURL: "/"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USER_NAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_DB_USER_NAME}:${MONGO_DB_PASSWORD}@${MONGO_DB_HOST_NAME}:${MONGO_CUSTOM_DB_PORT}/?authSource=${MONGO_DB_AUTH_SOURCE}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    deploy:
      resources:
          limits:
            cpus: "1.0"
            memory: 200M
    networks:
      - sentiment_analysis_network
    depends_on:
      mongoDB-sentiment_analysis:
        condition: service_healthy

  redis-sentiment_analysis:
    container_name: redis-sentiment_analysis
    image: redis:6.2-alpine
    restart: always
    ports:
      - $CACHE_REDIS_PORT:$CACHE_REDIS_PORT
    command: redis-server --port ${CACHE_REDIS_PORT} --requirepass $CACHE_REDIS_PASSWORD --save 20 1 --loglevel warning
    deploy:
      resources:
          limits:
            cpus: "2.0"
            memory: 500M
    networks:
      - sentiment_analysis_network
    volumes:
      - redis-cache-data-sentiment_analysis:/data

  redis-insight_sentiment_analysis:
    container_name: redis-insight_sentiment_analysis
    image: redis/redisinsight:latest
    ports:
      - $REDIS_INSIGHT_CUSTOM_PORT:$REDIS_INSIGHT_PORT
    environment:
      RI_SERVER_PORT: ${REDIS_INSIGHT_PORT}
    deploy:
      resources:
          limits:
            cpus: "1.0"
            memory: 200M
    networks:
      - sentiment_analysis_network
    restart: always
    volumes:
      - redisinsight_data-sentiment_analysis:/db
  
  consumers-sentiment_analysis:
    container_name: consumers-sentiment_analysis
    image: sentiment-analysis-image
    env_file:
      - ".env"
    command: bash -c "source /virtual-py/bin/activate && python3 consumers.py"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 200M
    networks:
      - sentiment_analysis_network
    restart: always

  celery-sentiment_analysis:
    container_name: celery-sentiment_analysis
    image: sentiment-analysis-image
    command: bash -c "source /virtual-py/bin/activate && celery -A api.celery_app worker --loglevel=info --concurrency=$(nproc)"
    restart: always
    volumes:
      - sentiment-analysis-model:/vol/model/
    environment:
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    networks:
      - sentiment_analysis_network
    depends_on:
      mongoDB-sentiment_analysis:
        condition: service_healthy
      redis-sentiment_analysis:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 4124M
        reservations:
          devices:
            - capabilities: [gpu]

  gunicorn-5001-sentiment_analysis:
    container_name: gunicorn-5001-sentiment_analysis
    image: sentiment-analysis-image
    restart: always
    ports:
      - 5001:5001
    env_file:
      - ".env"
    command: bash -c "source /virtual-py/bin/activate && gunicorn --bind 0.0.0.0:5001 run:app"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 300M
    networks:
      - sentiment_analysis_network
    depends_on:
      mongoDB-sentiment_analysis:
        condition: service_healthy

  gunicorn-5002-sentiment_analysis:
    container_name: gunicorn-5002-sentiment_analysis
    image: sentiment-analysis-image
    restart: always
    ports:
      - 5002:5002
    env_file:
      - ".env"
    command: bash -c "source /virtual-py/bin/activate && gunicorn --bind 0.0.0.0:5002 run:app"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 300M
    networks:
      - sentiment_analysis_network
    depends_on:
      mongoDB-sentiment_analysis:
        condition: service_healthy

  gunicorn-5003-sentiment_analysis:
    container_name: gunicorn-5003-sentiment_analysis
    image: sentiment-analysis-image
    restart: always
    ports:
      - 5003:5003
    env_file:
      - ".env"
    command: bash -c "source /virtual-py/bin/activate && gunicorn --bind 0.0.0.0:5003 run:app"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 300M
    networks:
      - sentiment_analysis_network
    depends_on:
      mongoDB-sentiment_analysis:
        condition: service_healthy

  gunicorn-5004-sentiment_analysis:
    container_name: gunicorn-5004-sentiment_analysis
    image: sentiment-analysis-image
    restart: always
    ports:
      - 5004:5004
    env_file:
      - ".env"
    command: bash -c "source /virtual-py/bin/activate && gunicorn --bind 0.0.0.0:5004 run:app"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 300M
    networks:
      - sentiment_analysis_network
    depends_on:
      mongoDB-sentiment_analysis:
        condition: service_healthy

  nginx-sentiment_analysis:
    build:
      context: ./nginx
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 300M
    ports:
      - $NGINX_PORT:$NGINX_PORT
    networks:
      - sentiment_analysis_network
    depends_on:
      - gunicorn-5004-sentiment_analysis

volumes:
  mongo-db-data-sentiment_analysis:
    driver: local
    name: mongo-data-sentiment_analysis
  mongodb-log-sentiment_analysis:
    driver: local
    name: mongo-log-sentiment_analysis
  redis-cache-data-sentiment_analysis:
    driver: local
    name: redis-cache-data-sentiment_analysis
  redisinsight_data-sentiment_analysis:
    driver: local
    name: redisinsight_data-sentiment_analysis
  sentiment-analysis-model:
    driver: local
    name: sentiment-analysis-model

networks:
  sentiment_analysis_network:
    driver: bridge
